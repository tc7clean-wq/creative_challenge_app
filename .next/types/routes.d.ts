// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/contests" | "/admin/create-contest" | "/admin/dashboard" | "/admin/jackpot" | "/admin/payouts" | "/admin/submissions" | "/admin/users" | "/auth" | "/contest/[id]" | "/contest/[id]/vote" | "/contests" | "/dashboard" | "/favorites" | "/gallery" | "/hall-of-fame" | "/leaderboard" | "/my-submissions" | "/profile/[username]" | "/settings" | "/submit"
type AppRouteHandlerRoutes = "/api/admin/jackpot/draw-winner" | "/api/checkout" | "/api/comments" | "/api/competitions/process-results" | "/api/health" | "/api/likes" | "/api/votes" | "/auth/callback"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/contests": {}
  "/admin/create-contest": {}
  "/admin/dashboard": {}
  "/admin/jackpot": {}
  "/admin/payouts": {}
  "/admin/submissions": {}
  "/admin/users": {}
  "/api/admin/jackpot/draw-winner": {}
  "/api/checkout": {}
  "/api/comments": {}
  "/api/competitions/process-results": {}
  "/api/health": {}
  "/api/likes": {}
  "/api/votes": {}
  "/auth": {}
  "/auth/callback": {}
  "/contest/[id]": { "id": string; }
  "/contest/[id]/vote": { "id": string; }
  "/contests": {}
  "/dashboard": {}
  "/favorites": {}
  "/gallery": {}
  "/hall-of-fame": {}
  "/leaderboard": {}
  "/my-submissions": {}
  "/profile/[username]": { "username": string; }
  "/settings": {}
  "/submit": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
